{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageAccountName": {
      "type": "string",
      "defaultValue": "opsmanstorageaccount",
      "metadata": {
        "description": "Name of storage account created with Azure CLI"
      }
    },
    "storageEndpoint": {
      "type": "string",
      "defaultValue": "blob.local.azurestack.external",
      "metadata": {
        "description": "Domain prefix for storaged based on the chosen Azure cloud i.e. Commercial, Germany, etc."
      }
    },
    "OpsManImageURI": {
      "type": "string",
      "defaultValue": "blob.local.azurestack.external",
      "metadata": {
        "description": "Uri of the Operations Manager VHD"
      }
    },    
    "useManagedDisks": {
      "type": "string",
      "defaultValue": "yes",
      "allowedValues": [
        "yes",
        "no"
      ],
      "metadata": {
        "description": "Use managed disks, otherwise, storageaccounts will be created"
      }
    },
    "Environment": {
      "type": "string",
      "defaultValue": "AzureStack",
      "allowedValues": [
        "AzureStack",
        "AzureCloud"
      ],
      "metadata": {
        "description": "Use managed disks, otherwise, storageaccounts will be created"
      }
    },    
    "opsManFQDNPrefix": {
      "type": "string",
      "defaultValue": "pcfopsman",
      "metadata": {
        "description": "Domain prefix for opsman."
      }
    },
    "opsManVHD": {
      "type": "string",
      "metadata": {
        "description": "Opsman VHD Name"
      }
    },
    "mask": {
      "type": "string",
      "defaultValue": "10.0",
      "metadata": {
        "description": "Opsman VHD Name"
      }
    }, 
    "deploymentcolor": {
      "type": "string",
      "defaultValue": "green",
      "metadata": {
        "description": "select the opsman deployment color"
      }
    },      
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_DS2_v2",
      "metadata": {
        "description": "Size of vm"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "ubuntu",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "sshKeyData": {
      "type": "securestring",
      "metadata": {
        "description": "Password for admin user."
      }
    },
"location": {
      "type": "string",
      "defaultValue": "local",
      "metadata": {
        "description": "location where you want to deploy resources"
      }
    },
    "dnsZoneName": {
      "type": "string",
      "defaultValue": "pcfpas.local.azurestack.external",
      "metadata": {
          "description": "The name of the DNS zone."
      }
    }  

  },
  "variables": {
    "boshExtraStorageAccountName": "[concat('xtrastrg',uniquestring(resourceGroup().id, deployment().name))]",
    "opsManVMName": "[parameters('opsManFQDNPrefix')]",
    "location": "[parameters('location')]",
    "vmStorageAccountContainerName": "vhds",
    "storageid": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
    "xstorageid1": "[resourceId('Microsoft.Storage/storageAccounts', concat(variables('boshExtraStorageAccountName'),'1'))]",
    "xstorageid2": "[resourceId('Microsoft.Storage/storageAccounts', concat(variables('boshExtraStorageAccountName'),'2'))]",
    "xstorageid3": "[resourceId('Microsoft.Storage/storageAccounts', concat(variables('boshExtraStorageAccountName'),'3'))]",
    "xstorageid4": "[resourceId('Microsoft.Storage/storageAccounts', concat(variables('boshExtraStorageAccountName'),'4'))]",
    "xstorageid5": "[resourceId('Microsoft.Storage/storageAccounts', concat(variables('boshExtraStorageAccountName'),'5'))]",
    "virtualNetworkName": "PCF",
    "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
    "pcfVNetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "opsManNicName": "[concat('OPSMANNIC_',parameters('deploymentcolor'))]",
    "addressSpace": "[concat(parameters('mask'),'.0.0/16')]",
    "ManagementaddressPrefix": "[concat(parameters('mask'),'.4.0/22')]",
    "ServicesaddressPrefix": "[concat(parameters('mask'),'.8.0/22')]",
    "DeploymentaddressPrefix": "[concat(parameters('mask'),'.12.0/22')]",
    "OpsManGreenIP": "[concat(parameters('mask'),'.4.4')]",
    "OpsManBlueIP": "[concat(parameters('mask'),'.4.5')]",
    "opsManPrivateIPAddress": "[if(equals(parameters('deploymentcolor'),'green'), variables('OpsManGreenIP'), variables('OpsManBlueIP'))]",
    "pcflbName": "pcf-lb",
    "pcflbID": "[resourceId('Microsoft.Network/loadBalancers',variables('pcflbName'))]",
    "pcffrontEndIPConfigID": "[concat(variables('pcflbID'),'/frontendIPConfigurations/pcf-fe-ip')]",
    "pcflbPoolID": "[concat(variables('pcflbID'),'/backendAddressPools/pcf-vms')]",
    "pcflbProbeID": "[concat(variables('pcflbID'),'/probes/tcp80')]",
    "diegosshlbName": "diegossh-lb",
    "diegosshlbID": "[resourceId('Microsoft.Network/loadBalancers',variables('diegosshlbName'))]",
    "diegosshfrontEndIPConfigID": "[concat(variables('diegosshlbID'),'/frontendIPConfigurations/diegossh-fe-ip')]",
    "diegosshlbPoolID": "[concat(variables('diegosshlbID'),'/backendAddressPools/diegossh-vms')]",
    "diegosshlbProbeID": "[concat(variables('diegosshlbID'),'/probes/tcp80')]",
    "mysqllbName": "mysql-lb",
    "mysqllbID": "[resourceId('Microsoft.Network/loadBalancers',variables('mysqllbName'))]",
    "mysqlfrontEndIPConfigID": "[concat(variables('mysqllbID'),'/frontendIPConfigurations/mysql-fe-ip')]",
    "mysqllbPoolID": "[concat(variables('mysqllbID'),'/backendAddressPools/mysql-vms')]",
    "mysqllbProbeID": "[concat(variables('mysqllbID'),'/probes/tcp1936')]",
    "diagnosticsStorageAccountName": "[concat('diag', uniquestring(resourceGroup().id))]",
    "diagnosticsStorageAccountType": "Standard_LRS",
    "mgmtSubnetRef": "[concat(variables('pcfVNetID'),'/subnets/', 'Management')]",
    "publicIPRef": "[concat('Microsoft.Network/publicIPAddresses/',variables('OpsManPublicIPName'))]",
    "OpsManPublicIPName": "[concat('OpsManPublicIP_', parameters('deploymentcolor'))]",
    "OpsManIPConfigName": "[concat('OpsManIPConfig_', parameters('deploymentcolor'))]",
    "OpsManVersion": "[replace(parameters('opsManVHD'),'.vhd', '')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "condition": "[equals(parameters('usemanageddisks'),'no')]",
      "name": "[concat(variables('boshExtraStorageAccountName'), '1')]",
      "apiVersion": "2016-01-01",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard_LRS"
        },
        "kind": "Storage",
        "properties": {
        }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "condition": "[equals(parameters('usemanageddisks'),'no')]",
      "name": "[concat(variables('boshExtraStorageAccountName'), '2')]",
      "apiVersion": "2016-01-01",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard_LRS"
        },
        "kind": "Storage",
        "properties": {
        }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "condition": "[equals(parameters('usemanageddisks'),'no')]",
      "name": "[concat(variables('boshExtraStorageAccountName'), '3')]",
      "apiVersion": "2016-01-01",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard_LRS"
        },
        "kind": "Storage",
        "properties": {
        }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "condition": "[equals(parameters('usemanageddisks'),'no')]",
      "name": "[concat(variables('boshExtraStorageAccountName'), '4')]",
      "apiVersion": "2016-01-01",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard_LRS"
        },
        "kind": "Storage",
        "properties": {
        }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "condition": "[equals(parameters('usemanageddisks'),'no')]",
      "name": "[concat(variables('boshExtraStorageAccountName'), '5')]",
      "apiVersion": "2016-01-01",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard_LRS"
        },
        "kind": "Storage",
        "properties": {
        }
    },
    {
      "name": "[variables('diagnosticsStorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2016-01-01",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[variables('diagnosticsStorageAccountType')]"
        },
        "kind": "Storage",
        "properties": {
        }      
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('OpsManPublicIPName')]",
      "location": "[variables('location')]",
      "tags": {
        "deployment": "[parameters('deploymentcolor')]"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('opsManFQDNPrefix')]"
        }
      }
    },
    {
        "type": "Microsoft.Network/dnszones",
        "condition": "[equals(parameters('Environment'),'AzureStack')]",
        "name": "[parameters('dnsZoneName')]",
        "apiVersion": "2016-04-01",
        "location": "global",
        "properties": {}
    },
    {
      "type": "Microsoft.Network/dnszones/A",
      "condition": "[equals(parameters('Environment'),'AzureStack')]",
      "name": "[concat(parameters('dnsZoneName'), '/*.system')]",
      "apiVersion": "2016-04-01",
      "location": "[variables('location')]",
      "dependsOn": [
        "[parameters('dnsZoneName')]",
        "Microsoft.Network/publicIPAddresses/pcf-lb-ip"
      ],
      "properties": {
        "TTL": 3600,
        "ARecords": [
          {
            "ipv4Address": "[reference('Microsoft.Network/publicIPAddresses/pcf-lb-ip').IpAddress]"
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/dnszones/A",
      "condition": "[equals(parameters('Environment'),'AzureStack')]",
      "name": "[concat(parameters('dnsZoneName'), '/*.apps')]",
      "apiVersion": "2016-04-01",
      "location": "[variables('location')]",
      "dependsOn": [
        "[parameters('dnsZoneName')]",
        "Microsoft.Network/publicIPAddresses/pcf-lb-ip"
      ],
      "properties": {
        "TTL": 3600,
        "ARecords": [
          {
            "ipv4Address": "[reference('Microsoft.Network/publicIPAddresses/pcf-lb-ip').IpAddress]"
          }
        ]
      }
    },    
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "pcf-lb-ip",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "mysql-lb-ip",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "diegossh-lb-ip",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "name": "AllowWeb",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "properties": {
              "description": "Allow Inbound HTTP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1100,
              "direction": "Inbound"
            },
            "name": "Allow-HTTP"
          },
          {
            "properties": {
              "description": "Allow Inbound HTTPS",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            },
            "name": "Allow-HTTPS"
          }
        ]
      }
    },        
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "AllowWebAndSSH",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "allow-ssh-to-opsman-green",
            "properties": {
              "description": "Allow Inbound SSH To Ops Manager",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "[concat(variables('OpsManGreenIP'), '/32')]",
              "access": "Allow",
              "priority": 1200,
              "direction": "Inbound"
            }
          },
          {
            "name": "allow-ssh-to-opsman-blue",
            "properties": {
              "description": "Allow Inbound SSH To Ops Manager",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "[concat(variables('OpsManBlueIP'), '/32')]",
              "access": "Allow",
              "priority": 1250,
              "direction": "Inbound"
            }
          },          
          {
            "name": "allow-http-to-opsman-green",
            "properties": {
              "description": "Allow Inbound HTTP To Ops Manager",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "[concat(variables('OpsManGreenIP'), '/32')]",
              "access": "Allow",
              "priority": 1300,
              "direction": "Inbound"
            }
          },
          {
            "name": "allow-http-to-opsman-blue",
            "properties": {
              "description": "Allow Inbound HTTP To Ops Manager",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "[concat(variables('OpsManBlueIP'), '/32')]",
              "access": "Allow",
              "priority": 1350,
              "direction": "Inbound"
            }
          },          
          {
            "name": "allow-https-to-opsman-green",
            "properties": {
              "description": "Allow Inbound HTTPS To Ops Manager",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "[concat(variables('OpsManGreenIP'), '/32')]",
              "access": "Allow",
              "priority": 1400,
              "direction": "Inbound"
            }
          },
          {
            "name": "allow-https-to-opsman-blue",
            "properties": {
              "description": "Allow Inbound HTTPS To Ops Manager",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "[concat(variables('OpsManBlueIP'), '/32')]",
              "access": "Allow",
              "priority": 1450,
              "direction": "Inbound"
            }
          },
          {
            "name": "allow-http",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1500,
              "direction": "Inbound"
            }
          },
          {
            "name": "allow-https",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1600,
              "direction": "Inbound"
            }
          },
          {
            "name": "allow-diego-ssh",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "2222",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1700,
              "direction": "Inbound"
            }
          },
          {
            "name": "allow-mysql-probe",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "1935",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 175,
              "direction": "Inbound"
            }
          },          
          {
            "name": "allow-mysqql",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3306",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1750,
              "direction": "Inbound"
            }
          },
          {
            "name": "allow-socks",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "8443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1850,
              "direction": "Inbound"
            }
          },
          {
            "name": "allow-credhub",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "8844",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1950,
              "direction": "Inbound"
            }
          },
            {
              "name": "allow-boshdns",
              "properties": {
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "8853",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 2050,
                "direction": "Inbound"
              }            
          } 

        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups', '/', 'AllowWebAndSSH')]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressSpace')]"
          ]
        },
        "subnets": [
          {
            "name": "Management",
            "properties": {
              "addressPrefix": "[variables('ManagementaddressPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'AllowWebAndSSH')]"
              }
            }
          },
          {
            "name": "Services",
            "properties": {
              "addressPrefix": "[variables('ServicesaddressPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'AllowWeb')]"
              }
            }
          },
          {
            "name": "Deployment",
            "properties": {
              "addressPrefix": "[variables('DeploymentaddressPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'AllowWeb')]"
              }
            }
          }
        ]        
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "name": "[variables('pcflbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "Microsoft.Network/publicIPAddresses/pcf-lb-ip"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "pcf-fe-ip",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses','pcf-lb-ip')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "pcf-vms"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "https",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('pcffrontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('pcflbPoolID')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "probe": {
                "id": "[variables('pcflbProbeID')]"
              }
            }
          },
          {
            "name": "http",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('pcffrontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('pcflbPoolID')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "probe": {
                "id": "[variables('pcflbProbeID')]"
              }
            }
          },
          {
            "name": "diego-ssh",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('pcffrontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('pcflbPoolID')]"
              },
              "protocol": "Tcp",
              "frontendPort": 2222,
              "backendPort": 2222,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "probe": {
                "id": "[variables('pcflbProbeID')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "tcp80",
            "properties": {
              "protocol": "Tcp",
              "port": 80,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "name": "[variables('diegosshlbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "Microsoft.Network/publicIPAddresses/diegossh-lb-ip"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "diegossh-fe-ip",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses','diegossh-lb-ip')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "diegossh-vms"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "https",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('diegosshfrontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('diegosshlbPoolID')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "probe": {
                "id": "[variables('diegosshlbProbeID')]"
              }
            }
          },
          {
            "name": "http",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('diegosshfrontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('diegosshlbPoolID')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "probe": {
                "id": "[variables('diegosshlbProbeID')]"
              }
            }
          },
          {
            "name": "diego-ssh",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('diegosshfrontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('diegosshlbPoolID')]"
              },
              "protocol": "Tcp",
              "frontendPort": 2222,
              "backendPort": 2222,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "probe": {
                "id": "[variables('diegosshlbProbeID')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "tcp80",
            "properties": {
              "protocol": "Tcp",
              "port": 80,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "name": "[variables('mysqllbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "Microsoft.Network/publicIPAddresses/mysql-lb-ip"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "mysql-fe-ip",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses','mysql-lb-ip')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "mysql-vms"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "mysql",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('mysqlfrontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('mysqllbPoolID')]"
              },
              "protocol": "Tcp",
              "frontendPort": 3306,
              "backendPort": 3306,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "probe": {
                "id": "[variables('mysqllbProbeID')]"
              }
            }
          },
          {
            "name": "mysql-probe",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('mysqlfrontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('mysqllbPoolID')]"
              },
              "protocol": "Tcp",
              "frontendPort": 1936,
              "backendPort": 1936,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "probe": {
                "id": "[variables('mysqllbProbeID')]"
              }
            }
          }          
        ],
        "probes": [
          {
            "name": "tcp1936",
            "properties": {
              "protocol": "Tcp",
              "port": 1936,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      }
    },
    
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('opsManNicName')]",
      "location": "[variables('location')]",
      "tags": {
        "deployment": "[parameters('deploymentcolor')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', 'AllowWebAndSSH')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'AllowWebAndSSH')]"
        },
        "ipConfigurations": [
          {
            "name": "[variables('OpsManIPConfigName')]",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('opsManPrivateIPAddress')]",
              "publicIPAddress": {
                "id": "[resourceID('Microsoft.Network/publicIPAddresses/',variables('OpsManPublicIPName'))]"
              },
              "subnet": {
                "id": "[reference(concat('Microsoft.Network/virtualNetworks/',variables('virtualNetworkName'))).subnets[0].id]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('opsManVMName')]",
      "location": "[variables('location')]",
      "tags": {
        "deployment": "[parameters('deploymentcolor')]",
        "opsmanversion": "[variables('OpsManVersion')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/',variables('opsManNicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('opsManVMName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[variables('sshKeyPath')]",
                  "keyData": "[parameters('sshKeyData')]"
                }
              ]
            }            
            }
        },
        "storageProfile": {
          "osDisk": {
            "osType": "Linux",
            "name": "osdisk",
            "createOption": "FromImage",
            "image": {
              "uri": "[parameters('OpsManImageURI')]"
            },
            "vhd": {
              "uri": "[concat('http://',parameters('storageAccountName'),'.',parameters('storageEndpoint'),'/',variables('vmStorageAccountContainerName'),'/',variables('opsManVMName'),'-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "diskSizeGB": 127
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('opsManNicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName')),providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob)]"
          }
        }
      }
    }
  ],
  "outputs": {
    "Opsman URL": {
      "value": "[concat('https://', reference(variables('OpsManPublicIPName')).dnsSettings.fqdn)]",
      "type": "string"
    },
      "Bosh Storageaccount": {
        "value": "[parameters('storageAccountName')]",
        "type": "string"
      },
    "Extra Storageaccount Prefix": {
      "type": "string",
      "value": "[if(equals(parameters('useManagedDisks'), 'no'), variables('boshExtraStorageAccountName'), 'None, using ManagedDisks for extra Storage')]"
    }
  }
}